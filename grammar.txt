statements    : NEWLINE* expr (NEWLINE+ expr)* NEWLINE*

expr          : IDENTIFIER COLON EQ expr <-hindi tama so far kase pwede wala colon
              : comp-expr ((KEYWORD AND | KEYWORD: OR)comp-expr)*

comp-expr     : NOT comp-expr
              : arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*

arith-expr    : term ((PLUS | MINUS) term)*

term          : factor ((MUL|DIV) factor)*

factor        : (PLUS | MINUS) factor
              : power
       
power         : base (POWER factor)*

call          : base (LPAREN (expr (COMMA expr)*)? RPAREN)?

base          : INT|FLOAT|STRING|IDENTIFIER
              : LPAREN expr RPAREN
              : list-expr
              : if-expr
              : func-def

list-expr     : LSQUARE (expr (COMMA expr)*)? RSQUARE

if-expr       : KEYWORD: IF LPAREN expr RPAREN
                (NEWLINE TAB statements)

if-expr       : KEYWORD: IF expr KEYWORD: THEN expr
              : (KEYWORD: ELIF expr KEYWORD:THEN expr)*
              : (KEYWORD: ELSE expr)?

func-def      : KEYWORD: FUNC IDENTIFER?
                LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
                (ARROW expr)
                (NEWLINE statements)